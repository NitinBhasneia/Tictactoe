{"ast":null,"code":"import _slicedToArray from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nitin/tictac/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nitin/tictac/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      board: Array(9).fill(null),\n      player: 'X'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"checkWinner\",\n    value: function checkWinner() {\n      var winlines = [['0', '1', '2'], ['3', '4', '5'], ['6', '7', '8'], ['0', '3', '6'], ['1', '4', '7'], ['2', '5', '8'], ['0', '4', '8'], ['2', '4', '6']];\n\n      for (var index = 0; index < winlines.length; index++) {\n        var _winlines$index = _slicedToArray(winlines[index], 3),\n            a = _winlines$index[0],\n            b = _winlines$index[1],\n            c = _winlines$index[2];\n\n        if (this.state.board[a] === this.state.board[b] && this.state.board[a] === this.state.board[c]) {\n          alert('You Won');\n        }\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(index) {\n      var newBoard = this.state.board;\n\n      if (this.state.board[index] === null) {\n        newBoard[index] = this.state.player;\n        this.setState({\n          board: newBoard,\n          player: this.state.player === 'X' ? 'O' : 'X'\n        });\n        this.checkWinner;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Box = this.state.board.map(function (box, index) {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          key: index,\n          onClick: function onClick() {\n            return _this2.handleClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, box);\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Tic Tac Toe App\"), React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, Box));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nitin/tictac/src/App.js"],"names":["React","Component","App","props","state","board","Array","fill","player","winlines","index","length","a","b","c","alert","newBoard","setState","checkWinner","Box","map","box","handleClick"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADE;AAETC,MAAAA,MAAM,EAAC;AAFE,KAAX;AAFgB;AAMjB;;;;kCACY;AACb,UAAIC,QAAQ,GACR,CACG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CADH,EAEG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAFH,EAGG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAHH,EAIG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJH,EAKG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CALH,EAMG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CANH,EAOG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAPH,EAQG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CARH,CADJ;;AAWI,WAAK,IAAIC,KAAK,GAAC,CAAf,EAAiBA,KAAK,GAACD,QAAQ,CAACE,MAAhC,EAAuCD,KAAK,EAA5C,EAAgD;AAAA,6CACjCD,QAAQ,CAACC,KAAD,CADyB;AAAA,YACxCE,CADwC;AAAA,YACtCC,CADsC;AAAA,YACpCC,CADoC;;AAE9C,YAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBO,CAAjB,MAAsB,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,CAAjB,CAAtB,IAA4C,KAAKT,KAAL,CAAWC,KAAX,CAAiBO,CAAjB,MAAsB,KAAKR,KAAL,CAAWC,KAAX,CAAiBS,CAAjB,CAArE,EACA;AAAEC,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;AAAC;AACL;;;gCACWL,K,EAAM;AACf,UAAIM,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,KAA1B;;AACA,UAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,KAAjB,MAA0B,IAA7B,EACE;AACEM,QAAAA,QAAQ,CAACN,KAAD,CAAR,GAAgB,KAAKN,KAAL,CAAWI,MAA3B;AACA,aAAKS,QAAL,CAAc;AACZZ,UAAAA,KAAK,EAACW,QADM;AAEZR,UAAAA,MAAM,EAAC,KAAKJ,KAAL,CAAWI,MAAX,KAAoB,GAApB,GAAwB,GAAxB,GAA4B;AAFvB,SAAd;AAIH,aAAKU,WAAL;AACE;AACL;;;6BACQ;AAAA;;AACP,UAAMC,GAAG,GAAC,KAAKf,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,UAACC,GAAD,EAAKX,KAAL;AAAA,eAC3B;AAAK,UAAA,SAAS,EAAC,KAAf;AACG,UAAA,GAAG,EAAEA,KADR;AAEG,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAI,CAACY,WAAL,CAAiBZ,KAAjB,CAAJ;AAAA,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGIW,GAHJ,CAD2B;AAAA,OAArB,CAAV;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,GADH,CAFF,CADF;AASD;;;;EAtDelB,S;;AAyDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      board :Array(9).fill(null),\n      player:'X'\n    }\n  }\n  checkWinner(){\n  let winlines=\n      [\n         ['0','1','2'],\n         ['3','4','5'],\n         ['6','7','8'],\n         ['0','3','6'],\n         ['1','4','7'],\n         ['2','5','8'],\n         ['0','4','8'],\n         ['2','4','6'] \n      ]\n      for (let index=0;index<winlines.length;index++) {\n        const[a,b,c]=winlines[index];\n        if(this.state.board[a]===this.state.board[b]&& this.state.board[a]===this.state.board[c])\n        { alert('You Won');\n      }}\n  }\n  handleClick(index){\n     let newBoard = this.state.board\n     if(this.state.board[index]===null)\n       {\n         newBoard[index]=this.state.player\n         this.setState({\n           board:newBoard,\n           player:this.state.player==='X'?'O':'X'\n          }) \n      this.checkWinner  \n       }\n  }\n  render() {\n    const Box=this.state.board.map((box,index)=>\n        <div className=\"box\"\n           key={index} \n           onClick={()=>this.handleClick(index)}>\n           {box}\n           </div>)\n    return (\n      <div className=\"App\">\n        <h1>Tic Tac Toe App</h1>\n        <div className=\"board\">\n          {Box}\n           </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}